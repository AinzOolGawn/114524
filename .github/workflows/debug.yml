name: Debug CI
on:
  workflow_dispatch:
      inputs:
        ci_upload:
          description: 'Upload to CI channel'
          required: false
          type: boolean
          
jobs:
  job_armv8:
    runs-on: macos-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Install Dependencies
        run: |
          npm install --global yarn
          cd ./.github/workflows
          yarn add node-telegram-bot-api commander
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup NPM Dependencies
        run: npm install typescript -g

      - name: Build
        run: ./gradlew assembleArmv8Debug

      - name: Determine the latest Build Tools version installed
        shell: bash
        run: echo "BUILD_TOOL_VERSION=$(ls "$ANDROID_HOME/build-tools/" | tail -n 1)" >> $GITHUB_ENV

      - name: Sign APK
        id: sign_app
        uses: SnapEnhance/sign-android-release@master
        with:
          releaseDirectory: app/build/outputs/apk/armv8/debug/
          signingKeyBase64: ${{ secrets.BACE64 }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOL_VERSION }}

      - name: Get current build version
        id: version-env
        run: |
          ./gradlew getVersion
          echo "version=$(cat app/build/version.txt)" >> $GITHUB_ENV

      - name: Delete unsigned APK file and rename the signed one
        run: |
          find app/build/outputs/apk/armv8/debug/ -type f ! -name '*-signed*' -delete
          mv ${{steps.sign_app.outputs.signedReleaseFile}} app/build/outputs/apk/armv8/debug/snapenhance-${{ env.version }}-armv8-${GITHUB_SHA::7}.apk

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: snapenhance-armv8-debug
          path: app/build/outputs/apk/armv8/debug/*.apk
          compression-level: 9
          
      # Upload the APK to WeTransfer and send link to Telegram
      - name: Send the APK to Telegram
        env:
          APK_PATH: app/build/outputs/apk/armv8/debug/snapenhance-${{ env.version }}-armv8-${GITHUB_SHA::7}.apk
          BOT_API_KEY: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          # Get the transfer script to upload the apks
          curl -sL https://git.io/file-transfer | sh
          # Upload and get the link
          LINK=$(./transfer wet $APK_PATH | grep "Download Link" | sed 's/Download Link://g')
          # Create a message
          MESSAGE="Template $(date +'%Y-%m-%d %H:%M')\n\nLink: ${LINK}"
          # Can't make the telegram markdown working
          TEXT=$(echo -e $MESSAGE)
          # Send the message to telegram
          curl -F chat_id=$CHAT_ID -F text="$TEXT" -F disable_web_page_preview=true https://api.telegram.org/bot${BOT_API_KEY}/sendMessage
          
  job_armv7:
    runs-on: macos-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup NPM Dependencies
        run: npm install typescript -g

      - name: Build
        run: ./gradlew assembleArmv7Debug

      - name: Determine the latest Build Tools version installed
        shell: bash
        run: echo "BUILD_TOOL_VERSION=$(ls "$ANDROID_HOME/build-tools/" | tail -n 1)" >> $GITHUB_ENV

      - name: Sign APK
        id: sign_app
        uses: SnapEnhance/sign-android-release@master
        with:
          releaseDirectory: app/build/outputs/apk/armv7/debug/
          signingKeyBase64: ${{ secrets.BACE64 }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOL_VERSION }}

      - name: Get current build version
        id: version-env
        run: |
          ./gradlew getVersion
          echo "version=$(cat app/build/version.txt)" >> $GITHUB_ENV

      - name: Delete unsigned APK file and rename the signed one
        run: |
          find app/build/outputs/apk/armv7/debug/ -type f ! -name '*-signed*' -delete
          mv ${{steps.sign_app.outputs.signedReleaseFile}} app/build/outputs/apk/armv7/debug/snapenhance-${{ env.version }}-armv7-${GITHUB_SHA::7}.apk

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: snapenhance-armv7-debug
          path: app/build/outputs/apk/armv7/debug/*.apk
          compression-level: 9
          
  job_universal:
    runs-on: macos-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup NPM Dependencies
        run: npm install typescript -g

      - name: Build
        run: ./gradlew assembleAllDebug

      - name: Determine the latest Build Tools version installed
        shell: bash
        run: echo "BUILD_TOOL_VERSION=$(ls "$ANDROID_HOME/build-tools/" | tail -n 1)" >> $GITHUB_ENV

      - name: Sign APK
        id: sign_app
        uses: SnapEnhance/sign-android-release@master
        with:
          releaseDirectory: app/build/outputs/apk/all/debug/
          signingKeyBase64: ${{ secrets.BACE64 }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOL_VERSION }}

      - name: Get current build version
        id: version-env
        run: |
          ./gradlew getVersion
          echo "version=$(cat app/build/version.txt)" >> $GITHUB_ENV

      - name: Delete unsigned APK file and rename the signed one
        run: |
          find app/build/outputs/apk/all/debug/ -type f ! -name '*-signed*' -delete
          mv ${{steps.sign_app.outputs.signedReleaseFile}} app/build/outputs/apk/all/debug/snapenhance-${{ env.version }}-universal-${GITHUB_SHA::7}.apk

      - name: Upload universal
        uses: actions/upload-artifact@v4
        with:
          name: snapenhance-universal-debug
          path: app/build/outputs/apk/all/debug/*.apk
          compression-level: 9
          
  job_manager:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew manager:assembleDebug

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: manager
          path: manager/build/outputs/apk/debug/*.apk
          compression-level: 9
          
      - name: Send the APK to Telegram
        env:
          APK_PATH: manager/build/outputs/apk/debug/*.apk
          BOT_API_KEY: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          # Get the transfer script to upload the apks
          curl -sL https://git.io/file-transfer | sh
          # Upload and get the link
          LINK=$(./transfer wet $APK_PATH | grep "Download Link" | sed 's/Download Link://g')
          # Create a message
          MESSAGE="Template $(date +'%Y-%m-%d %H:%M')\n\nLink: ${LINK}"
          # Can't make the telegram markdown working
          TEXT=$(echo -e $MESSAGE)
          # Send the message to telegram
          curl -F chat_id=$CHAT_ID -F text="$TEXT" -F disable_web_page_preview=true https://api.telegram.org/bot${BOT_API_KEY}/sendMessage
      - name: send Apk
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          document: manager/build/outputs/apk/debug/*.apk
          
  job_core:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew assembleCoreDebug

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: core
          path: app/build/outputs/apk/core/debug/*.apk
          compression-level: 9
          
      
