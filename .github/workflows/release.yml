name: Release CI
on:
 workflow_dispatch:

jobs:
 build:
  runs-on: ubuntu-latest
  steps:
   - name: Checkout Repository with Submodules
     uses: actions/checkout@v4
     with:
      submodules: 'recursive'

   - name: Setup Java 17 with Gradle Cache
     uses: actions/setup-java@v4
     with:
      java-version: '17'
      distribution: 'temurin'
      cache: gradle

   - name: Grant Execute Permission for gradlew
     run: chmod +x gradlew

   - name: Clean Gradle Cache
     run: ./gradlew clean

   - name: Build with Gradle Wrapper and Assemble Release APKs
     run: ./gradlew assembleRelease

   - name: Sign ARMv7 APK with Keystore Data from Secrets
     id: sign_armv7_app
     uses: kevin-david/zipalign-sign-android-release@v1.1.1
     with:
      releaseDirectory: app/build/outputs/apk/armv7/release/
      signingKeyBase64: ${{ secrets.JAVA_KEYSTORE_DATA }}
      alias: ${{ secrets.KEY_ALIAS }}
      keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
      keyPassword: ${{ secrets.KEY_PASSWORD }}

   - name: Upload SnapEnhance ARMv7 Release APK to GitHub Actions
     uses: actions/upload-artifact@v3
     with:
      name: SnapEnhance-ARMv7-Release
      path: ${{ steps.sign_armv7_app.outputs.signedReleaseFile }}

   - name: Sign ARMv8 APK with Keystore Data from Secrets
     id: sign_armv8_app
     uses: kevin-david/zipalign-sign-android-release@v1.1.1
     with:
      releaseDirectory: app/build/outputs/apk/armv8/release/
      signingKeyBase64: ${{ secrets.JAVA_KEYSTORE_DATA }}
      alias: ${{ secrets.KEY_ALIAS }}
      keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
      keyPassword: ${{ secrets.KEY_PASSWORD }}

   - name: Upload SnapEnhance ARMv8 Release APK to GitHub Actions
     uses: actions/upload-artifact@v3
     with:
      name: SnapEnhance-ARMv8-Release
      path: ${{ steps.sign_armv8_app.outputs.signedReleaseFile }}

   - name: Generate Version File with Gradle Wrapper
     run: |
      ./gradlew getVersion

   - name: Set Version to Environment Variable
     id: version-env
     run: echo "version=$(cat app/build/version.txt)" >> $GITHUB_ENV

   - name: Publish APK to GitHub Releases
     uses: marvinpinto/action-automatic-releases@latest
     with:
      repo_token: "${{ secrets.GITHUB_TOKEN }}"
      prerelease: false
      files: |
       ${{ steps.sign_armv7_app.outputs.signedReleaseFile }}
       ${{ steps.sign_armv8_app.outputs.signedReleaseFile }}
      automatic_release_tag: v${{ env.version }}